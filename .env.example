# Private key for a test account on the target network (e.g., Polygon Mainnet for these tests)
# Should be 64 hexadecimal characters. The scripts will handle adding '0x' if missing.
# IMPORTANT: NEVER COMMIT THIS FILE WITH A REAL PRIVATE KEY TO A PUBLIC REPOSITORY.
PRIVATE_KEY="YOUR_TEST_ACCOUNT_PRIVATE_KEY_HERE_64_HEX_CHARS"

# Wallet address of the owner or a test address (for reference, not always used directly by scripts)
# Example: 0x1234567890123456789012345678901234567890
OWNER_WALLET="YOUR_TEST_OWNER_WALLET_ADDRESS_HERE"

# Address of the ERC20 payment token used by the LHILecceNFT contract, if applicable for 'payWithToken = true'
# This is specific to your LHILecceNFT contract's constructor argument.
# Example for a known token on Polygon: 0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174 (USDC on Polygon)
PAYMENT_TOKEN="YOUR_PAYMENT_TOKEN_ADDRESS_ON_POLYGON_HERE"

# RPC URLs
# Primary QuickNode URL for Polygon Mainnet (or your preferred provider)
QUICKNODE_MATIC_URL="https://your-quicknode-matic-mainnet-endpoint-url.com"

# Fallback Polygon Mainnet RPC URL (e.g., a public one if QuickNode is down)
# You can uncomment and use this if QUICKNODE_MATIC_URL is not set or fails in hardhat.config.js logic
# POLYGON_RPC_URL="https://polygon-rpc.com"

# Etherscan API Key (for PolygonScan if verifying contracts via Hardhat)
POLYGONSCAN_API_KEY="YOUR_POLYGONSCAN_API_KEY_HERE"

# Optional: Other network RPC URLs and API keys if you use them in hardhat.config.js
# ETHEREUM_RPC_URL="YOUR_ETHEREUM_MAINNET_RPC_URL_HERE"
# ETHERSCAN_API_KEY="YOUR_ETHERSCAN_API_KEY_HERE" # Often the same as Polygonscan for Etherscan family
# BASESCAN_API_KEY="YOUR_BASESCAN_API_KEY_HERE"
# AMOY_RPC_URL="YOUR_AMOY_TESTNET_RPC_URL_HERE"
# SEPOLIA_RPC_URL="YOUR_SEPOLIA_TESTNET_RPC_URL_HERE"
# BASE_RPC_URL="YOUR_BASE_MAINNET_RPC_URL_HERE"
# BASE_SEPOLIA_RPC_URL="YOUR_BASE_SEPOLIA_RPC_URL_HERE"


# Optional: CoinMarketCap API Key (if using hardhat-gas-reporter with USD conversion)
# COINMARKET_API_KEY="YOUR_COINMARKETCAP_API_KEY_HERE"

# Optional: Pinata API Keys (if your project involves IPFS and Pinata for metadata/assets)
# PINATA_API_KEY="YOUR_PINATA_API_KEY"
# PINATA_SECRET_KEY="YOUR_PINATA_API_SECRET_ACCESS_KEY"

# Optional: Default Base URI for NFTs (if your deploy script or contract uses it)
# BASE_URI="ipfs://YOUR_DEFAULT_METADATA_CID/"
